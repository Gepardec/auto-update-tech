## Titel des Berichts:
**Analysebericht Mega-Backend ‚Äì Sicherheits- und Abh√§ngigkeitsanalyse (Vx.x)**

## Ziel:
Erstellung eines vollst√§ndigen, detaillierten und technisch fundierten Analyseberichts zur Bewertung des aktuellen Zustands (‚ÄûIST-Zustand‚Äú) der Anwendung **Mega-Backend**.
Der Bericht soll bestehende Technologien, Sicherheitsl√ºcken, Abh√§ngigkeiten, Lizenzlagen, Architektur und Modernisierungspotenzial umfassend erfassen und aufzeigen, wie die Anwendung zukunftssicher und sicherheitskonform weiterentwickelt werden kann.

Der Bericht dient als Entscheidungsgrundlage f√ºr Updates, Architekturma√ünahmen und CI/CD-Strategien.

---

## Format & Stil:

- Der **gesamte Bericht muss auf Deutsch** verfasst werden.  
- **Technologien, Frameworks und Toolnamen** bleiben in ihrer **Originalsprache (Englisch)**.  
- Der Stil ist **technisch pr√§zise, sachlich und ausf√ºhrlich** (au√üer im Kapitel *Management Summary*, das **nicht-technisch** formuliert sein soll).  
- **Zitate und Quellenverweise m√ºssen nach dem IEEE-Zitationsstandard** erfolgen.  
  Sie sind im Flie√ütext mit **fortlaufenden Nummern in eckigen Klammern** zu kennzeichnen (z.B. [1], [2]) und im Kapitel **‚ÄûReferenzen‚Äú** am Ende des Dokuments vollst√§ndig anzugeben.
  Weitere Informationen: [IEEE Referencing Guide ‚Äì Victoria University](https://libraryguides.vu.edu.au/ieeereferencing/standardsandpatents)  
- **Fu√ünoten oder Symbole (z.B. ‚Ä†)** sind **nicht zul√§ssig**.
- **Alle Bilder und Diagramme** (z.B. Dependency Trees, Sonar-√úbersichten) werden als **[Placeholder: Beschreibung]** eingef√ºgt.
- Der Bericht wird im **.docx-Format (Microsoft Word)** ausgegeben.  
- Die Formatierung (Layout, Deckblatt, Schriftarten etc.) muss exakt der Datei **"Empty-Analysebericht-V1.0.docx"** entsprechen.  
- Die Struktur, Inhalte und Kapitelreihenfolge basieren vollst√§ndig auf **"Anom-Analysebericht-V1.0.docx"**.  
- Die **Versionsnummer des Berichts** muss automatisch erh√∂ht werden (z.B. V1.0 ‚Üí V1.1).

---

## Verbindliche Kapitel√ºbersicht (gem√§√ü Instruktion & Formatvorgabe):

```
1. Management Summary
2. Einleitung
3. IST-Zustand
    3.1 Technologien & Architektur
        3.1.1 Architektur√ºbersicht
    3.2 Allgemeine Metriken
    3.3 Dependency Status
        3.3.1 Besonders auff√§llig
        3.4 Sicherheitslage (Vulnerabilities)
        3.4.1 Kritische Schwachstellen (Critical)
        3.4.2 Hochpriorisierte Schwachstellen (High)
    3.5 Sonar Metriken
    3.6 Tests & Qualit√§tssicherung
        3.6.1 Aktuelle Test-Situation
        3.6.2 F√ºr eine zuk√ºnftige Qualit√§tssicherung wird empfohlen
    3.7 Automatisierung & CI/CD
    3.8 NIS2 Abweichungen
4. Vorgeschlagene Update-Roadmap
    4.1 Vorbereitende Ma√ünahmen
    4.2 Durchf√ºhrung der Updates
        4.2.1 Arbeitsweise
        4.2.2 Risikomanagement
        4.2.3 Verwendete Tools und Technologie
    4.3 Post-Update T√§tigkeiten
    4.4 Empfehlungen f√ºr die Zukunft
    4.5 Update Investition
5. Fazit
6. Ausblick: Auto-Update f√ºr SEQiFY-Guardian
7. Referenzen
```

---

## Eingebundene Quelldateien (Pflichtintegration)

### Architektur & Technologie
- pom.xml

### Abh√§ngigkeits- und Lizenzanalyse
-

### AutoUpdater / Update-Analyse (adapted POM)
- MEGA-Analysebericht-Rohdaten.xlsx
- test_coverage.csv
- summary.csv
- security_hotspots.csv
- issues_by_type.csv
- issues_by_severity.csv
- sonar-report.json

### Weitere Quellen
- Empty-Analysebericht-V1.0.docx (leere Vorlage mit Inhaltverzeichnis und Formatierung)
- ENISA_Technical_implementation_guidance_on_cybersecurity_risk_management_measures_version_1.0.pdf (NIS2 guideline)

### Referenz Bericht(e) (Beispiele wie andere Berichte augebaut sind)
- Anom-Analysebericht-V1.0.docx (Bericht von einem anderem Produkt; dienst als Vorlage f√ºr Struktur und Stil)
- Guardian-Analysebericht-V1.3.docx (Bericht von einem anderem Produkt; dienst als Vorlage f√ºr Struktur und Stil)

---

## Inhaltliche Anforderungen:

- **Management Summary:**
  - Das Management Summary soll f√ºr die MEGA-Applikation anhand der Daten neu beschrieben werden.
    Management Summary soll aus Sicht eines IT-Security-Experte verfasst werden.
    Fasse folgenden technischen Bericht in einer Management Summary f√ºr CEO, CIO und CTO zusammen.
    Anforderungen:
    ‚Äì Keine technischen Begriffe oder Jargon
    ‚Äì Risiken konkret & alltagsverst√§ndlich erkl√§ren
    ‚Äì Positive Aspekte benennen ‚Äì aber realistisch, nicht sch√∂nreden
    ‚Äì Empfehlungen klar, realistisch und priorisiert formulieren
    ‚Äì Struktur wie folgt:
    üõë Risikobewertung ‚Üí in Worten + Skala 0‚Äì10

    ‚ùó Kritische Risiken

    ‚ö†Ô∏è Weitere Schw√§chen

    ‚úÖ Positive Aspekte

    üîÑ Empfehlung

    ‚è≥ Fazit
    Formulierungsregeln:

    ‚Äì Keine Begriffe wie ‚ÄûMaven‚Äú, ‚ÄûMultimodul‚Äú, etc.
    ‚Äì Statt ‚Äûkeine Tests‚Äú ‚Üí ‚Äûkeine automatisierten Tests‚Äú
    ‚Äì F√ºr Wartungsangebot immer: ‚ÄûAuto Update Service von gepardec‚Äú verwenden
    ‚Äì F√ºge folgenden Satz direkt unter die Risikobewertung ein, wenn Verst√∂√üe gegen DORA / NIS enthalten sind:
    ‚ÄûZudem verst√∂√üt Guardian gegen zentrale Anforderungen von NIS2 und DORA, da es weder laufende Sicherheits√ºberwachung noch automatisierte Tests, nachvollziehbare √Ñnderungen oder ein Risikomanagement gibt.‚Äú
    ‚Äì Textl√§nge: kompakt, verst√§ndlich, auf 1 max A4-Seite reduziert

    Eingabetext:
    üëâ [Hier kompletten technischen Bericht einf√ºgen]

- **Technologien & Architektur:** √úbersicht √ºber Backend, Frontend, Authentifizierung, CI/CD, Deployment-Umgebung  
- **Allgemeine Metriken:** LOC, Klassen, Komplexit√§t, Duplikate ‚Äì sollen als Tabelle dargestellt werden mit den Spaltennamen "Name und "Wert"
- **Dependency Status:** Bibliotheken mit Version, Scope, Updates, Fix-Version  
- **Sicherheitslage:**
  - Zum Kapitel "Sicherheitslage (Vulnerabilities)" diesen Text einf√ºgen.
    "
    In den folgenden Kapiteln werden alle schwerwiegenden und zehn High-Schwachstellen nach EPSS aufgelistet, wobei der EPSS-Score (Exploit Prediction Scoring System)
    die gesch√§tzte Wahrscheinlichkeit angibt, dass eine Schwachstelle innerhalb der n√§chsten 30 Tage in der Praxis ausgenutzt wird. Der EPSS-Percentile ordnet diese
    Wahrscheinlichkeit im Vergleich zu allen bekannten Schwachstellen ein und zeigt damit, wie hoch das Risiko relativ zum Gesamtbestand ist (z. B. Percentile 99
    bedeutet, dass die Schwachstelle zu den 1 % am wahrscheinlichsten ausnutzbaren CVEs geh√∂rt). Die EPSS-Werte und Percentiles stammen aus der √∂ffentlichen Datenbank
    von epsslookup.com (<DATE>).
    "
  - Tabelle mit mindestens **10 Critical** und **10 High Vulnerabilities**, sofern vorhanden.
  - Die Tabellen sollen mit folgenden Spaltennamen aufbaut werden: *Komponente, CVE-ID, Beschreibung, CVSS, EPSS, Percentile, Fix-Version*. Die Spalte *Beschreibung* beinh√§lt eine kurze Zusammenfassung des CVEs in deutsch
- **SonarQube-Metriken:** Bugs, Code Smells, Coverage etc. sollen als Tabelle dargestellt werden mit den Spaltennamen "Name und "Wert"
- **Tests & Qualit√§tssicherung:** Tools, Testarten, Coverage  
- **CI/CD:** Tools, Pipelines, Deployments
- **NIS2 Abweichungen:** Abweichungen von den NIS2-Anforderungen, sofern vorhanden.
- **Ziele & Roadmap:** Java-Version, Multimodul, CI/CD-Ausbau  
- **Ausblick: Auto-Update f√ºr SEQiFY-Guardian** placeholder setzen "[Aus letzem bericht √ºbernehmen, review und anpassen]"
- **Dependency-Tree-Bilder** als Platzhalter einf√ºgen
- Die Kapitel "Risikomanagement" soll mit einem Platzhalter mit der Nachricht "Kapitel k√∂nnen 1:1 aus Basis-Report √ºbernommen werden" und m√ºssen abschlie√üend Reviewed werden.".
---

### M√∂gliche Modernisierungsschritte (technisch empfohlen)


1. **Technische Infrastruktur modernisieren:**
   - Upgraden der Dependencies

2. **Automatisiertes Dependency-Management einf√ºhren:**
   - Integration von **Renovate** f√ºr automatische Pull-Requests bei neuen Bibliotheksversionen.  
   - **OpenRewrite** einsetzen, um automatisiert Codeanpassungen bei API-Breaks durchzuf√ºhren.

---


## Ausgabeformat

- **Microsoft Word (.docx)**  
- Deckblatt, Inhaltsverzeichnis, Kapitelnummerierung  
- Alle Kapitel mit inhalt vollst√§ndig erstellt
- Referenzen als letztes Kapitel im IEEE-Stil


## Abfolge:
1. Analysiere den kompletten Prompt
2. Alle Anforderunge aus dem prompt (Titel des Berichts, Ziel, Format & Stil, Verbindliche Kapitel√ºbersicht (gem√§√ü Instruktion & Formatvorgabe), Eingebundene Quelldateien (Pflichtintegration), Inhaltliche Anforderungen, Ausgabeformat) m√ºssen befolgt werden
3. Die Assitent Instructions m√ºssen eingehalten werden
4. Alle Daten m√ºssen eingelesen und analysiert werden
4.1 Sofern vorhanden analyse die "Referenz Bericht(e)" diese k√∂nnen als Vorlage dienen, die dort erw√§hnten Daten d√ºrfen aber nicht √ºbernommen werden.
4.2 NIS2 Guideline muss analysiert werden (file: ENISA_Technical_implementation_guidance_on_cybersecurity_risk_management_measures_version_1.0.pdf)
5. Der vollst√§ndige Bericht mit allen fertigstellten Kapiteln strukturiert in deutsch zur verf√ºgung gestellt werden:
- Struktur nach Kapitelvorgabe
	- Inhaltsverzeichnis mit Platzhaltern
- Deckblatt, Seitenzahlen, Kopf-/Fu√üzeilen
	- Inhaltlich vollst√§ndige Auswertung aller Datenquellen
- Alle Tabellen oder Grafiken (Grafiken als **[Placeholder: Beschreibung]**)
6. Das Datum von heute soll im Bericht gesetzt werden
7. Starte in dieser Kapitel reinfolge mit der abarbeitung:
```
1. Management Summary
2. Einleitung
3. IST-Zustand
    3.1 Technologien & Architektur
        3.1.1 Architektur√ºbersicht
    3.2 Allgemeine Metriken
    3.3 Dependency Status
        3.3.1 Besonders auff√§llig
        3.4 Sicherheitslage (Vulnerabilities)
        3.4.1 Kritische Schwachstellen (Critical)
        3.4.2 Hochpriorisierte Schwachstellen (High)
    3.5 Sonar Metriken
    3.6 Tests & Qualit√§tssicherung
        3.6.1 Aktuelle Test-Situation
        3.6.2 F√ºr eine zuk√ºnftige Qualit√§tssicherung wird empfohlen
    3.7 Automatisierung & CI/CD
    3.8 NIS2 Abweichungen
4. Vorgeschlagene Update-Roadmap
    4.1 Vorbereitende Ma√ünahmen
    4.2 Durchf√ºhrung der Updates
        4.2.1 Arbeitsweise
        4.2.2 Risikomanagement
        4.2.3 Verwendete Tools und Technologie
    4.3 Post-Update T√§tigkeiten
    4.4 Empfehlungen f√ºr die Zukunft
    4.5 Update Investition
5. Fazit
6. Ausblick: Auto-Update f√ºr SEQiFY-Guardian
7. Referenzen
``` 
f√ºge alle Tabellen und Grafiken-Platzhalter mit ein.
8. Pr√ºfe ob jedes Kapitel detailiert beschrieben oder mit Platzhalter versehrt wurde, ist das nicht der fallt muss das Kapitel √ºberarbeitet werden.
9. Die Kaptiel aus "Verbindliche Kapitel√ºbersicht" sind schon als √úberschrift in der Vorlage Empty-Analysebericht-V1.0.docx enthalten, diese m√ºssen nicht mehr hinzugef√ºgt werden.
